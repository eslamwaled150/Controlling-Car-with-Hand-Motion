
Motor_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000086  00800060  000009fa  00000a8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  008000e6  008000e6  00000b14  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b44  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002113  00000000  00000000  00000d70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad4  00000000  00000000  00002e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001124  00000000  00000000  00003957  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a4  00000000  00000000  00004a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c0  00000000  00000000  00004e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d9e  00000000  00000000  000055e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000637e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 82 04 	jmp	0x904	; 0x904 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3e       	cpi	r26, 0xE6	; 230
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 ee       	ldi	r26, 0xE6	; 230
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 3e       	cpi	r26, 0xE9	; 233
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 56 02 	call	0x4ac	; 0x4ac <main>
  8a:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <CarMotor_init>:
  92:	0e 94 f7 03 	call	0x7ee	; 0x7ee <PWM_init>
  96:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <DIO_init>
  9a:	41 e0       	ldi	r20, 0x01	; 1
  9c:	64 e0       	ldi	r22, 0x04	; 4
  9e:	83 e0       	ldi	r24, 0x03	; 3
  a0:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
  a4:	41 e0       	ldi	r20, 0x01	; 1
  a6:	65 e0       	ldi	r22, 0x05	; 5
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
  ae:	41 e0       	ldi	r20, 0x01	; 1
  b0:	63 e0       	ldi	r22, 0x03	; 3
  b2:	82 e0       	ldi	r24, 0x02	; 2
  b4:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
  b8:	41 e0       	ldi	r20, 0x01	; 1
  ba:	64 e0       	ldi	r22, 0x04	; 4
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
  c2:	41 e0       	ldi	r20, 0x01	; 1
  c4:	65 e0       	ldi	r22, 0x05	; 5
  c6:	82 e0       	ldi	r24, 0x02	; 2
  c8:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
  cc:	41 e0       	ldi	r20, 0x01	; 1
  ce:	66 e0       	ldi	r22, 0x06	; 6
  d0:	82 e0       	ldi	r24, 0x02	; 2
  d2:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
  d6:	08 95       	ret

000000d8 <CarMotor_Stop>:
  d8:	40 e0       	ldi	r20, 0x00	; 0
  da:	63 e0       	ldi	r22, 0x03	; 3
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	64 e0       	ldi	r22, 0x04	; 4
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	65 e0       	ldi	r22, 0x05	; 5
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	66 e0       	ldi	r22, 0x06	; 6
  fa:	82 e0       	ldi	r24, 0x02	; 2
  fc:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 100:	08 95       	ret

00000102 <CarMotor_backword>:
 102:	0e 94 2b 04 	call	0x856	; 0x856 <PWM_car_speed_Range>
 106:	40 e0       	ldi	r20, 0x00	; 0
 108:	63 e0       	ldi	r22, 0x03	; 3
 10a:	82 e0       	ldi	r24, 0x02	; 2
 10c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 110:	41 e0       	ldi	r20, 0x01	; 1
 112:	64 e0       	ldi	r22, 0x04	; 4
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 11a:	40 e0       	ldi	r20, 0x00	; 0
 11c:	65 e0       	ldi	r22, 0x05	; 5
 11e:	82 e0       	ldi	r24, 0x02	; 2
 120:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	66 e0       	ldi	r22, 0x06	; 6
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 12e:	08 95       	ret

00000130 <CarMotor_forward>:
 130:	0e 94 2b 04 	call	0x856	; 0x856 <PWM_car_speed_Range>
 134:	41 e0       	ldi	r20, 0x01	; 1
 136:	63 e0       	ldi	r22, 0x03	; 3
 138:	82 e0       	ldi	r24, 0x02	; 2
 13a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	64 e0       	ldi	r22, 0x04	; 4
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 148:	41 e0       	ldi	r20, 0x01	; 1
 14a:	65 e0       	ldi	r22, 0x05	; 5
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	66 e0       	ldi	r22, 0x06	; 6
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 15c:	08 95       	ret

0000015e <CarMotor_toRight>:
 15e:	0e 94 2b 04 	call	0x856	; 0x856 <PWM_car_speed_Range>
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	63 e0       	ldi	r22, 0x03	; 3
 166:	82 e0       	ldi	r24, 0x02	; 2
 168:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 16c:	40 e0       	ldi	r20, 0x00	; 0
 16e:	64 e0       	ldi	r22, 0x04	; 4
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	65 e0       	ldi	r22, 0x05	; 5
 17a:	82 e0       	ldi	r24, 0x02	; 2
 17c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 180:	40 e0       	ldi	r20, 0x00	; 0
 182:	66 e0       	ldi	r22, 0x06	; 6
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 18a:	08 95       	ret

0000018c <CarMotor_toLeft>:
 18c:	0e 94 2b 04 	call	0x856	; 0x856 <PWM_car_speed_Range>
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	63 e0       	ldi	r22, 0x03	; 3
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 19a:	41 e0       	ldi	r20, 0x01	; 1
 19c:	64 e0       	ldi	r22, 0x04	; 4
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1a4:	40 e0       	ldi	r20, 0x00	; 0
 1a6:	65 e0       	ldi	r22, 0x05	; 5
 1a8:	82 e0       	ldi	r24, 0x02	; 2
 1aa:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1ae:	40 e0       	ldi	r20, 0x00	; 0
 1b0:	66 e0       	ldi	r22, 0x06	; 6
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1b8:	08 95       	ret

000001ba <LCD_sendCmnd>:
 1ba:	cf 93       	push	r28
 1bc:	c8 2f       	mov	r28, r24
 1be:	40 e0       	ldi	r20, 0x00	; 0
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	62 e0       	ldi	r22, 0x02	; 2
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1d2:	c4 fb       	bst	r28, 4
 1d4:	44 27       	eor	r20, r20
 1d6:	40 f9       	bld	r20, 0
 1d8:	64 e0       	ldi	r22, 0x04	; 4
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1e0:	c5 fb       	bst	r28, 5
 1e2:	44 27       	eor	r20, r20
 1e4:	40 f9       	bld	r20, 0
 1e6:	65 e0       	ldi	r22, 0x05	; 5
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1ee:	c6 fb       	bst	r28, 6
 1f0:	44 27       	eor	r20, r20
 1f2:	40 f9       	bld	r20, 0
 1f4:	66 e0       	ldi	r22, 0x06	; 6
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 1fc:	4c 2f       	mov	r20, r28
 1fe:	44 1f       	adc	r20, r20
 200:	44 27       	eor	r20, r20
 202:	44 1f       	adc	r20, r20
 204:	67 e0       	ldi	r22, 0x07	; 7
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	63 e0       	ldi	r22, 0x03	; 3
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 216:	8f e9       	ldi	r24, 0x9F	; 159
 218:	9f e0       	ldi	r25, 0x0F	; 15
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <LCD_sendCmnd+0x60>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <LCD_sendCmnd+0x66>
 220:	00 00       	nop
 222:	40 e0       	ldi	r20, 0x00	; 0
 224:	63 e0       	ldi	r22, 0x03	; 3
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 22c:	4c 2f       	mov	r20, r28
 22e:	41 70       	andi	r20, 0x01	; 1
 230:	64 e0       	ldi	r22, 0x04	; 4
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 238:	c1 fb       	bst	r28, 1
 23a:	44 27       	eor	r20, r20
 23c:	40 f9       	bld	r20, 0
 23e:	65 e0       	ldi	r22, 0x05	; 5
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 246:	c2 fb       	bst	r28, 2
 248:	44 27       	eor	r20, r20
 24a:	40 f9       	bld	r20, 0
 24c:	66 e0       	ldi	r22, 0x06	; 6
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 254:	c3 fb       	bst	r28, 3
 256:	44 27       	eor	r20, r20
 258:	40 f9       	bld	r20, 0
 25a:	67 e0       	ldi	r22, 0x07	; 7
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	63 e0       	ldi	r22, 0x03	; 3
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 26c:	8f e9       	ldi	r24, 0x9F	; 159
 26e:	9f e0       	ldi	r25, 0x0F	; 15
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <LCD_sendCmnd+0xb6>
 274:	00 c0       	rjmp	.+0      	; 0x276 <LCD_sendCmnd+0xbc>
 276:	00 00       	nop
 278:	40 e0       	ldi	r20, 0x00	; 0
 27a:	63 e0       	ldi	r22, 0x03	; 3
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <LCD_init>:
 286:	41 e0       	ldi	r20, 0x01	; 1
 288:	61 e0       	ldi	r22, 0x01	; 1
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 290:	41 e0       	ldi	r20, 0x01	; 1
 292:	62 e0       	ldi	r22, 0x02	; 2
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 29a:	41 e0       	ldi	r20, 0x01	; 1
 29c:	63 e0       	ldi	r22, 0x03	; 3
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 2a4:	41 e0       	ldi	r20, 0x01	; 1
 2a6:	64 e0       	ldi	r22, 0x04	; 4
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	65 e0       	ldi	r22, 0x05	; 5
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 2b8:	41 e0       	ldi	r20, 0x01	; 1
 2ba:	66 e0       	ldi	r22, 0x06	; 6
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	67 e0       	ldi	r22, 0x07	; 7
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 2cc:	2f ef       	ldi	r18, 0xFF	; 255
 2ce:	83 ef       	ldi	r24, 0xF3	; 243
 2d0:	91 e0       	ldi	r25, 0x01	; 1
 2d2:	21 50       	subi	r18, 0x01	; 1
 2d4:	80 40       	sbci	r24, 0x00	; 0
 2d6:	90 40       	sbci	r25, 0x00	; 0
 2d8:	e1 f7       	brne	.-8      	; 0x2d2 <LCD_init+0x4c>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <LCD_init+0x56>
 2dc:	00 00       	nop
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	61 e0       	ldi	r22, 0x01	; 1
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	62 e0       	ldi	r22, 0x02	; 2
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	64 e0       	ldi	r22, 0x04	; 4
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	65 e0       	ldi	r22, 0x05	; 5
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 306:	40 e0       	ldi	r20, 0x00	; 0
 308:	66 e0       	ldi	r22, 0x06	; 6
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	67 e0       	ldi	r22, 0x07	; 7
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 31a:	41 e0       	ldi	r20, 0x01	; 1
 31c:	63 e0       	ldi	r22, 0x03	; 3
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 324:	8f e9       	ldi	r24, 0x9F	; 159
 326:	9f e0       	ldi	r25, 0x0F	; 15
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <LCD_init+0xa2>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <LCD_init+0xa8>
 32e:	00 00       	nop
 330:	40 e0       	ldi	r20, 0x00	; 0
 332:	63 e0       	ldi	r22, 0x03	; 3
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 33a:	88 e2       	ldi	r24, 0x28	; 40
 33c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
 340:	90 ef       	ldi	r25, 0xF0	; 240
 342:	9a 95       	dec	r25
 344:	f1 f7       	brne	.-4      	; 0x342 <LCD_init+0xbc>
 346:	8f e0       	ldi	r24, 0x0F	; 15
 348:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
 34c:	20 ef       	ldi	r18, 0xF0	; 240
 34e:	2a 95       	dec	r18
 350:	f1 f7       	brne	.-4      	; 0x34e <LCD_init+0xc8>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
 358:	8f e3       	ldi	r24, 0x3F	; 63
 35a:	9f e1       	ldi	r25, 0x1F	; 31
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	f1 f7       	brne	.-4      	; 0x35c <LCD_init+0xd6>
 360:	00 c0       	rjmp	.+0      	; 0x362 <LCD_init+0xdc>
 362:	00 00       	nop
 364:	86 e0       	ldi	r24, 0x06	; 6
 366:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
 36a:	08 95       	ret

0000036c <LCD_sendChar>:
 36c:	cf 93       	push	r28
 36e:	c8 2f       	mov	r28, r24
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	61 e0       	ldi	r22, 0x01	; 1
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 37a:	40 e0       	ldi	r20, 0x00	; 0
 37c:	62 e0       	ldi	r22, 0x02	; 2
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 384:	c4 fb       	bst	r28, 4
 386:	44 27       	eor	r20, r20
 388:	40 f9       	bld	r20, 0
 38a:	64 e0       	ldi	r22, 0x04	; 4
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 392:	c5 fb       	bst	r28, 5
 394:	44 27       	eor	r20, r20
 396:	40 f9       	bld	r20, 0
 398:	65 e0       	ldi	r22, 0x05	; 5
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3a0:	c6 fb       	bst	r28, 6
 3a2:	44 27       	eor	r20, r20
 3a4:	40 f9       	bld	r20, 0
 3a6:	66 e0       	ldi	r22, 0x06	; 6
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3ae:	4c 2f       	mov	r20, r28
 3b0:	44 1f       	adc	r20, r20
 3b2:	44 27       	eor	r20, r20
 3b4:	44 1f       	adc	r20, r20
 3b6:	67 e0       	ldi	r22, 0x07	; 7
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3be:	41 e0       	ldi	r20, 0x01	; 1
 3c0:	63 e0       	ldi	r22, 0x03	; 3
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3c8:	8f e9       	ldi	r24, 0x9F	; 159
 3ca:	9f e0       	ldi	r25, 0x0F	; 15
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <LCD_sendChar+0x60>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <LCD_sendChar+0x66>
 3d2:	00 00       	nop
 3d4:	40 e0       	ldi	r20, 0x00	; 0
 3d6:	63 e0       	ldi	r22, 0x03	; 3
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3de:	4c 2f       	mov	r20, r28
 3e0:	41 70       	andi	r20, 0x01	; 1
 3e2:	64 e0       	ldi	r22, 0x04	; 4
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3ea:	c1 fb       	bst	r28, 1
 3ec:	44 27       	eor	r20, r20
 3ee:	40 f9       	bld	r20, 0
 3f0:	65 e0       	ldi	r22, 0x05	; 5
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 3f8:	c2 fb       	bst	r28, 2
 3fa:	44 27       	eor	r20, r20
 3fc:	40 f9       	bld	r20, 0
 3fe:	66 e0       	ldi	r22, 0x06	; 6
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 406:	c3 fb       	bst	r28, 3
 408:	44 27       	eor	r20, r20
 40a:	40 f9       	bld	r20, 0
 40c:	67 e0       	ldi	r22, 0x07	; 7
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 414:	41 e0       	ldi	r20, 0x01	; 1
 416:	63 e0       	ldi	r22, 0x03	; 3
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 41e:	8f e9       	ldi	r24, 0x9F	; 159
 420:	9f e0       	ldi	r25, 0x0F	; 15
 422:	01 97       	sbiw	r24, 0x01	; 1
 424:	f1 f7       	brne	.-4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 426:	00 c0       	rjmp	.+0      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 428:	00 00       	nop
 42a:	40 e0       	ldi	r20, 0x00	; 0
 42c:	63 e0       	ldi	r22, 0x03	; 3
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	0e 94 7d 03 	call	0x6fa	; 0x6fa <DIO_setPinValue>
 434:	cf 91       	pop	r28
 436:	08 95       	ret

00000438 <LCD_writeString>:
 438:	0f 93       	push	r16
 43a:	1f 93       	push	r17
 43c:	cf 93       	push	r28
 43e:	00 97       	sbiw	r24, 0x00	; 0
 440:	29 f4       	brne	.+10     	; 0x44c <LCD_writeString+0x14>
 442:	0c c0       	rjmp	.+24     	; 0x45c <LCD_writeString+0x24>
 444:	0e 94 b6 01 	call	0x36c	; 0x36c <LCD_sendChar>
 448:	cf 5f       	subi	r28, 0xFF	; 255
 44a:	02 c0       	rjmp	.+4      	; 0x450 <LCD_writeString+0x18>
 44c:	8c 01       	movw	r16, r24
 44e:	c0 e0       	ldi	r28, 0x00	; 0
 450:	f8 01       	movw	r30, r16
 452:	ec 0f       	add	r30, r28
 454:	f1 1d       	adc	r31, r1
 456:	80 81       	ld	r24, Z
 458:	81 11       	cpse	r24, r1
 45a:	f4 cf       	rjmp	.-24     	; 0x444 <LCD_writeString+0xc>
 45c:	cf 91       	pop	r28
 45e:	1f 91       	pop	r17
 460:	0f 91       	pop	r16
 462:	08 95       	ret

00000464 <LCD_goToSpecification>:
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	19 f0       	breq	.+6      	; 0x46e <LCD_goToSpecification+0xa>
 468:	82 30       	cpi	r24, 0x02	; 2
 46a:	49 f0       	breq	.+18     	; 0x47e <LCD_goToSpecification+0x1a>
 46c:	08 95       	ret
 46e:	80 e8       	ldi	r24, 0x80	; 128
 470:	86 0f       	add	r24, r22
 472:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
 476:	80 ef       	ldi	r24, 0xF0	; 240
 478:	8a 95       	dec	r24
 47a:	f1 f7       	brne	.-4      	; 0x478 <LCD_goToSpecification+0x14>
 47c:	08 95       	ret
 47e:	80 ec       	ldi	r24, 0xC0	; 192
 480:	86 0f       	add	r24, r22
 482:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
 486:	80 ef       	ldi	r24, 0xF0	; 240
 488:	8a 95       	dec	r24
 48a:	f1 f7       	brne	.-4      	; 0x488 <LCD_goToSpecification+0x24>
 48c:	08 95       	ret

0000048e <LCD_clear>:
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_sendCmnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 494:	8f e3       	ldi	r24, 0x3F	; 63
 496:	9f e1       	ldi	r25, 0x1F	; 31
 498:	01 97       	sbiw	r24, 0x01	; 1
 49a:	f1 f7       	brne	.-4      	; 0x498 <LCD_clear+0xa>
 49c:	00 c0       	rjmp	.+0      	; 0x49e <LCD_clear+0x10>
 49e:	00 00       	nop
 4a0:	08 95       	ret

000004a2 <UART_RXC_ISR>:
#include "Car.h"

static u8 count;
void UART_RXC_ISR(void)
{
	UART_RxChar(&count);
 4a2:	86 ee       	ldi	r24, 0xE6	; 230
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 73 04 	call	0x8e6	; 0x8e6 <UART_RxChar>
 4aa:	08 95       	ret

000004ac <main>:
}

int main(void)
{
	u8 motorSpeed,motorSpeed_val=0,motorDirection=15;
	DIO_init();
 4ac:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <DIO_init>
	CarMotor_init();
 4b0:	0e 94 49 00 	call	0x92	; 0x92 <CarMotor_init>
	UART_init();
 4b4:	0e 94 42 04 	call	0x884	; 0x884 <UART_init>
	LCD_init();
 4b8:	0e 94 43 01 	call	0x286	; 0x286 <LCD_init>
	UART_RXC_EnableInt();
 4bc:	0e 94 79 04 	call	0x8f2	; 0x8f2 <UART_RXC_EnableInt>
	GIE_Enable();
 4c0:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <GIE_Enable>
	UART_RXC_SetCallback(UART_RXC_ISR);
 4c4:	81 e5       	ldi	r24, 0x51	; 81
 4c6:	92 e0       	ldi	r25, 0x02	; 2
 4c8:	0e 94 7d 04 	call	0x8fa	; 0x8fa <UART_RXC_SetCallback>
	LCD_writeString((u8*)"Car is ON");
 4cc:	80 e6       	ldi	r24, 0x60	; 96
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
 4d4:	2f ef       	ldi	r18, 0xFF	; 255
 4d6:	83 ec       	ldi	r24, 0xC3	; 195
 4d8:	99 e0       	ldi	r25, 0x09	; 9
 4da:	21 50       	subi	r18, 0x01	; 1
 4dc:	80 40       	sbci	r24, 0x00	; 0
 4de:	90 40       	sbci	r25, 0x00	; 0
 4e0:	e1 f7       	brne	.-8      	; 0x4da <main+0x2e>
 4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <main+0x38>
 4e4:	00 00       	nop
	_delay_ms(200);
	
	while (1)
	{
		   motorDirection=count&0b00001111;
 4e6:	c0 91 e6 00 	lds	r28, 0x00E6	; 0x8000e6 <__data_end>
 4ea:	dc 2f       	mov	r29, r28
 4ec:	df 70       	andi	r29, 0x0F	; 15
		   motorSpeed_val=count>>4;
 4ee:	c2 95       	swap	r28
 4f0:	cf 70       	andi	r28, 0x0F	; 15
			LCD_clear();
 4f2:	0e 94 47 02 	call	0x48e	; 0x48e <LCD_clear>
			LCD_goToSpecification(LCD_LINE_ONE,0);
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	0e 94 32 02 	call	0x464	; 0x464 <LCD_goToSpecification>
			
			// Set motor speed based on the speed level
			switch (motorSpeed_val)
 4fe:	c2 30       	cpi	r28, 0x02	; 2
 500:	b9 f0       	breq	.+46     	; 0x530 <main+0x84>
 502:	28 f4       	brcc	.+10     	; 0x50e <main+0x62>
 504:	cc 23       	and	r28, r28
 506:	41 f0       	breq	.+16     	; 0x518 <main+0x6c>
 508:	c1 30       	cpi	r28, 0x01	; 1
 50a:	61 f0       	breq	.+24     	; 0x524 <main+0x78>
 50c:	23 c0       	rjmp	.+70     	; 0x554 <main+0xa8>
 50e:	c3 30       	cpi	r28, 0x03	; 3
 510:	a9 f0       	breq	.+42     	; 0x53c <main+0x90>
 512:	c4 30       	cpi	r28, 0x04	; 4
 514:	c9 f0       	breq	.+50     	; 0x548 <main+0x9c>
 516:	1e c0       	rjmp	.+60     	; 0x554 <main+0xa8>
			{
				case 0:
				motorSpeed = 0;
				LCD_writeString((u8*)"speed: 0");
 518:	8a e6       	ldi	r24, 0x6A	; 106
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
			
			// Set motor speed based on the speed level
			switch (motorSpeed_val)
			{
				case 0:
				motorSpeed = 0;
 520:	c0 e0       	ldi	r28, 0x00	; 0
				LCD_writeString((u8*)"speed: 0");
				break;
 522:	1d c0       	rjmp	.+58     	; 0x55e <main+0xb2>
				
				case 1:
				motorSpeed = 30;
				LCD_writeString((u8*)"speed: 1");
 524:	83 e7       	ldi	r24, 0x73	; 115
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				motorSpeed = 0;
				LCD_writeString((u8*)"speed: 0");
				break;
				
				case 1:
				motorSpeed = 30;
 52c:	ce e1       	ldi	r28, 0x1E	; 30
				LCD_writeString((u8*)"speed: 1");
				break;
 52e:	17 c0       	rjmp	.+46     	; 0x55e <main+0xb2>
				
				case 2:
				motorSpeed = 50;
				LCD_writeString((u8*)"speed: 2");
 530:	8c e7       	ldi	r24, 0x7C	; 124
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				motorSpeed = 30;
				LCD_writeString((u8*)"speed: 1");
				break;
				
				case 2:
				motorSpeed = 50;
 538:	c2 e3       	ldi	r28, 0x32	; 50
				LCD_writeString((u8*)"speed: 2");
				break;
 53a:	11 c0       	rjmp	.+34     	; 0x55e <main+0xb2>
				
				case 3:
				motorSpeed = 75;
				LCD_writeString((u8*)"speed: 3");
 53c:	85 e8       	ldi	r24, 0x85	; 133
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				motorSpeed = 50;
				LCD_writeString((u8*)"speed: 2");
				break;
				
				case 3:
				motorSpeed = 75;
 544:	cb e4       	ldi	r28, 0x4B	; 75
				LCD_writeString((u8*)"speed: 3");
				break;
 546:	0b c0       	rjmp	.+22     	; 0x55e <main+0xb2>
				
				case 4:
				motorSpeed = 100;
				LCD_writeString((u8*)"speed: 4");
 548:	8e e8       	ldi	r24, 0x8E	; 142
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				motorSpeed = 75;
				LCD_writeString((u8*)"speed: 3");
				break;
				
				case 4:
				motorSpeed = 100;
 550:	c4 e6       	ldi	r28, 0x64	; 100
				LCD_writeString((u8*)"speed: 4");
				break;
 552:	05 c0       	rjmp	.+10     	; 0x55e <main+0xb2>
				
				default:
				motorSpeed = 0;
				LCD_writeString((u8*)"NO speed");
 554:	87 e9       	ldi	r24, 0x97	; 151
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				motorSpeed = 100;
				LCD_writeString((u8*)"speed: 4");
				break;
				
				default:
				motorSpeed = 0;
 55c:	c0 e0       	ldi	r28, 0x00	; 0
				LCD_writeString((u8*)"NO speed");
				break;
			}
			
			LCD_goToSpecification(LCD_LINE_TWO,0);
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	82 e0       	ldi	r24, 0x02	; 2
 562:	0e 94 32 02 	call	0x464	; 0x464 <LCD_goToSpecification>
			switch (motorDirection)
 566:	dd 30       	cpi	r29, 0x0D	; 13
 568:	d9 f0       	breq	.+54     	; 0x5a0 <main+0xf4>
 56a:	28 f4       	brcc	.+10     	; 0x576 <main+0xca>
 56c:	db 30       	cpi	r29, 0x0B	; 11
 56e:	41 f0       	breq	.+16     	; 0x580 <main+0xd4>
 570:	dc 30       	cpi	r29, 0x0C	; 12
 572:	71 f0       	breq	.+28     	; 0x590 <main+0xe4>
 574:	2c c0       	rjmp	.+88     	; 0x5ce <main+0x122>
 576:	de 30       	cpi	r29, 0x0E	; 14
 578:	d9 f0       	breq	.+54     	; 0x5b0 <main+0x104>
 57a:	df 30       	cpi	r29, 0x0F	; 15
 57c:	09 f1       	breq	.+66     	; 0x5c0 <main+0x114>
 57e:	27 c0       	rjmp	.+78     	; 0x5ce <main+0x122>
			{
				case 11:
				// Forward
				LCD_writeString((u8*)"Direction:F");
 580:	80 ea       	ldi	r24, 0xA0	; 160
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				CarMotor_forward(motorSpeed);
 588:	8c 2f       	mov	r24, r28
 58a:	0e 94 98 00 	call	0x130	; 0x130 <CarMotor_forward>
				break;
 58e:	27 c0       	rjmp	.+78     	; 0x5de <main+0x132>
				
				case 12:
				// Backward
				LCD_writeString((u8*)"Direction:B");
 590:	8c ea       	ldi	r24, 0xAC	; 172
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				CarMotor_backword(motorSpeed);
 598:	8c 2f       	mov	r24, r28
 59a:	0e 94 81 00 	call	0x102	; 0x102 <CarMotor_backword>
				break;
 59e:	1f c0       	rjmp	.+62     	; 0x5de <main+0x132>
				
				case 13:
				// Left
				LCD_writeString((u8*)"Direction:L");
 5a0:	88 eb       	ldi	r24, 0xB8	; 184
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				CarMotor_toLeft(motorSpeed);
 5a8:	8c 2f       	mov	r24, r28
 5aa:	0e 94 c6 00 	call	0x18c	; 0x18c <CarMotor_toLeft>
				break;
 5ae:	17 c0       	rjmp	.+46     	; 0x5de <main+0x132>
				
				case 14:
				// Right
				LCD_writeString((u8*)"Direction:R");
 5b0:	84 ec       	ldi	r24, 0xC4	; 196
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				CarMotor_toRight(motorSpeed);
 5b8:	8c 2f       	mov	r24, r28
 5ba:	0e 94 af 00 	call	0x15e	; 0x15e <CarMotor_toRight>
				break;
 5be:	0f c0       	rjmp	.+30     	; 0x5de <main+0x132>
				
				case 15:
				// Stop
				LCD_writeString((u8*)"Direction:S");
 5c0:	80 ed       	ldi	r24, 0xD0	; 208
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				CarMotor_Stop();
 5c8:	0e 94 6c 00 	call	0xd8	; 0xd8 <CarMotor_Stop>
				break;
 5cc:	08 c0       	rjmp	.+16     	; 0x5de <main+0x132>
				
			default:
				// Invalid direction, stop the motors
				LCD_writeString((u8*)"Not Valid");
 5ce:	8c ed       	ldi	r24, 0xDC	; 220
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 94 1c 02 	call	0x438	; 0x438 <LCD_writeString>
				CarMotor_Stop(0);
 5d6:	80 e0       	ldi	r24, 0x00	; 0
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 6c 00 	call	0xd8	; 0xd8 <CarMotor_Stop>
 5de:	2f ef       	ldi	r18, 0xFF	; 255
 5e0:	8b e4       	ldi	r24, 0x4B	; 75
 5e2:	9d e1       	ldi	r25, 0x1D	; 29
 5e4:	21 50       	subi	r18, 0x01	; 1
 5e6:	80 40       	sbci	r24, 0x00	; 0
 5e8:	90 40       	sbci	r25, 0x00	; 0
 5ea:	e1 f7       	brne	.-8      	; 0x5e4 <main+0x138>
 5ec:	00 c0       	rjmp	.+0      	; 0x5ee <main+0x142>
 5ee:	00 00       	nop
 5f0:	7a cf       	rjmp	.-268    	; 0x4e6 <main+0x3a>

000005f2 <DIO_init>:
 5f2:	8f ef       	ldi	r24, 0xFF	; 255
 5f4:	8a bb       	out	0x1a, r24	; 26
 5f6:	8f e4       	ldi	r24, 0x4F	; 79
 5f8:	87 bb       	out	0x17, r24	; 23
 5fa:	8f e7       	ldi	r24, 0x7F	; 127
 5fc:	84 bb       	out	0x14, r24	; 20
 5fe:	82 e3       	ldi	r24, 0x32	; 50
 600:	81 bb       	out	0x11, r24	; 17
 602:	84 e0       	ldi	r24, 0x04	; 4
 604:	8b bb       	out	0x1b, r24	; 27
 606:	18 ba       	out	0x18, r1	; 24
 608:	15 ba       	out	0x15, r1	; 21
 60a:	12 ba       	out	0x12, r1	; 18
 60c:	08 95       	ret

0000060e <DIO_setPinDirection>:
 60e:	84 30       	cpi	r24, 0x04	; 4
 610:	08 f0       	brcs	.+2      	; 0x614 <DIO_setPinDirection+0x6>
 612:	72 c0       	rjmp	.+228    	; 0x6f8 <DIO_setPinDirection+0xea>
 614:	68 30       	cpi	r22, 0x08	; 8
 616:	08 f0       	brcs	.+2      	; 0x61a <DIO_setPinDirection+0xc>
 618:	6f c0       	rjmp	.+222    	; 0x6f8 <DIO_setPinDirection+0xea>
 61a:	42 30       	cpi	r20, 0x02	; 2
 61c:	08 f0       	brcs	.+2      	; 0x620 <DIO_setPinDirection+0x12>
 61e:	6c c0       	rjmp	.+216    	; 0x6f8 <DIO_setPinDirection+0xea>
 620:	81 30       	cpi	r24, 0x01	; 1
 622:	01 f1       	breq	.+64     	; 0x664 <DIO_setPinDirection+0x56>
 624:	30 f0       	brcs	.+12     	; 0x632 <DIO_setPinDirection+0x24>
 626:	82 30       	cpi	r24, 0x02	; 2
 628:	b1 f1       	breq	.+108    	; 0x696 <DIO_setPinDirection+0x88>
 62a:	83 30       	cpi	r24, 0x03	; 3
 62c:	09 f4       	brne	.+2      	; 0x630 <DIO_setPinDirection+0x22>
 62e:	4c c0       	rjmp	.+152    	; 0x6c8 <DIO_setPinDirection+0xba>
 630:	08 95       	ret
 632:	41 30       	cpi	r20, 0x01	; 1
 634:	59 f4       	brne	.+22     	; 0x64c <DIO_setPinDirection+0x3e>
 636:	2a b3       	in	r18, 0x1a	; 26
 638:	81 e0       	ldi	r24, 0x01	; 1
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	02 c0       	rjmp	.+4      	; 0x642 <DIO_setPinDirection+0x34>
 63e:	88 0f       	add	r24, r24
 640:	99 1f       	adc	r25, r25
 642:	6a 95       	dec	r22
 644:	e2 f7       	brpl	.-8      	; 0x63e <DIO_setPinDirection+0x30>
 646:	82 2b       	or	r24, r18
 648:	8a bb       	out	0x1a, r24	; 26
 64a:	08 95       	ret
 64c:	2a b3       	in	r18, 0x1a	; 26
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	02 c0       	rjmp	.+4      	; 0x658 <DIO_setPinDirection+0x4a>
 654:	88 0f       	add	r24, r24
 656:	99 1f       	adc	r25, r25
 658:	6a 95       	dec	r22
 65a:	e2 f7       	brpl	.-8      	; 0x654 <DIO_setPinDirection+0x46>
 65c:	80 95       	com	r24
 65e:	82 23       	and	r24, r18
 660:	8a bb       	out	0x1a, r24	; 26
 662:	08 95       	ret
 664:	41 30       	cpi	r20, 0x01	; 1
 666:	59 f4       	brne	.+22     	; 0x67e <DIO_setPinDirection+0x70>
 668:	27 b3       	in	r18, 0x17	; 23
 66a:	81 e0       	ldi	r24, 0x01	; 1
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	02 c0       	rjmp	.+4      	; 0x674 <DIO_setPinDirection+0x66>
 670:	88 0f       	add	r24, r24
 672:	99 1f       	adc	r25, r25
 674:	6a 95       	dec	r22
 676:	e2 f7       	brpl	.-8      	; 0x670 <DIO_setPinDirection+0x62>
 678:	82 2b       	or	r24, r18
 67a:	87 bb       	out	0x17, r24	; 23
 67c:	08 95       	ret
 67e:	27 b3       	in	r18, 0x17	; 23
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	02 c0       	rjmp	.+4      	; 0x68a <DIO_setPinDirection+0x7c>
 686:	88 0f       	add	r24, r24
 688:	99 1f       	adc	r25, r25
 68a:	6a 95       	dec	r22
 68c:	e2 f7       	brpl	.-8      	; 0x686 <DIO_setPinDirection+0x78>
 68e:	80 95       	com	r24
 690:	82 23       	and	r24, r18
 692:	87 bb       	out	0x17, r24	; 23
 694:	08 95       	ret
 696:	41 30       	cpi	r20, 0x01	; 1
 698:	59 f4       	brne	.+22     	; 0x6b0 <DIO_setPinDirection+0xa2>
 69a:	24 b3       	in	r18, 0x14	; 20
 69c:	81 e0       	ldi	r24, 0x01	; 1
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <DIO_setPinDirection+0x98>
 6a2:	88 0f       	add	r24, r24
 6a4:	99 1f       	adc	r25, r25
 6a6:	6a 95       	dec	r22
 6a8:	e2 f7       	brpl	.-8      	; 0x6a2 <DIO_setPinDirection+0x94>
 6aa:	82 2b       	or	r24, r18
 6ac:	84 bb       	out	0x14, r24	; 20
 6ae:	08 95       	ret
 6b0:	24 b3       	in	r18, 0x14	; 20
 6b2:	81 e0       	ldi	r24, 0x01	; 1
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	02 c0       	rjmp	.+4      	; 0x6bc <DIO_setPinDirection+0xae>
 6b8:	88 0f       	add	r24, r24
 6ba:	99 1f       	adc	r25, r25
 6bc:	6a 95       	dec	r22
 6be:	e2 f7       	brpl	.-8      	; 0x6b8 <DIO_setPinDirection+0xaa>
 6c0:	80 95       	com	r24
 6c2:	82 23       	and	r24, r18
 6c4:	84 bb       	out	0x14, r24	; 20
 6c6:	08 95       	ret
 6c8:	41 30       	cpi	r20, 0x01	; 1
 6ca:	59 f4       	brne	.+22     	; 0x6e2 <DIO_setPinDirection+0xd4>
 6cc:	21 b3       	in	r18, 0x11	; 17
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <DIO_setPinDirection+0xca>
 6d4:	88 0f       	add	r24, r24
 6d6:	99 1f       	adc	r25, r25
 6d8:	6a 95       	dec	r22
 6da:	e2 f7       	brpl	.-8      	; 0x6d4 <DIO_setPinDirection+0xc6>
 6dc:	82 2b       	or	r24, r18
 6de:	81 bb       	out	0x11, r24	; 17
 6e0:	08 95       	ret
 6e2:	21 b3       	in	r18, 0x11	; 17
 6e4:	81 e0       	ldi	r24, 0x01	; 1
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <DIO_setPinDirection+0xe0>
 6ea:	88 0f       	add	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	6a 95       	dec	r22
 6f0:	e2 f7       	brpl	.-8      	; 0x6ea <DIO_setPinDirection+0xdc>
 6f2:	80 95       	com	r24
 6f4:	82 23       	and	r24, r18
 6f6:	81 bb       	out	0x11, r24	; 17
 6f8:	08 95       	ret

000006fa <DIO_setPinValue>:
 6fa:	84 30       	cpi	r24, 0x04	; 4
 6fc:	08 f0       	brcs	.+2      	; 0x700 <DIO_setPinValue+0x6>
 6fe:	72 c0       	rjmp	.+228    	; 0x7e4 <DIO_setPinValue+0xea>
 700:	68 30       	cpi	r22, 0x08	; 8
 702:	08 f0       	brcs	.+2      	; 0x706 <DIO_setPinValue+0xc>
 704:	6f c0       	rjmp	.+222    	; 0x7e4 <DIO_setPinValue+0xea>
 706:	42 30       	cpi	r20, 0x02	; 2
 708:	08 f0       	brcs	.+2      	; 0x70c <DIO_setPinValue+0x12>
 70a:	6c c0       	rjmp	.+216    	; 0x7e4 <DIO_setPinValue+0xea>
 70c:	81 30       	cpi	r24, 0x01	; 1
 70e:	01 f1       	breq	.+64     	; 0x750 <DIO_setPinValue+0x56>
 710:	30 f0       	brcs	.+12     	; 0x71e <DIO_setPinValue+0x24>
 712:	82 30       	cpi	r24, 0x02	; 2
 714:	b1 f1       	breq	.+108    	; 0x782 <DIO_setPinValue+0x88>
 716:	83 30       	cpi	r24, 0x03	; 3
 718:	09 f4       	brne	.+2      	; 0x71c <DIO_setPinValue+0x22>
 71a:	4c c0       	rjmp	.+152    	; 0x7b4 <DIO_setPinValue+0xba>
 71c:	08 95       	ret
 71e:	41 30       	cpi	r20, 0x01	; 1
 720:	59 f4       	brne	.+22     	; 0x738 <DIO_setPinValue+0x3e>
 722:	2b b3       	in	r18, 0x1b	; 27
 724:	81 e0       	ldi	r24, 0x01	; 1
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	02 c0       	rjmp	.+4      	; 0x72e <DIO_setPinValue+0x34>
 72a:	88 0f       	add	r24, r24
 72c:	99 1f       	adc	r25, r25
 72e:	6a 95       	dec	r22
 730:	e2 f7       	brpl	.-8      	; 0x72a <DIO_setPinValue+0x30>
 732:	82 2b       	or	r24, r18
 734:	8b bb       	out	0x1b, r24	; 27
 736:	08 95       	ret
 738:	2b b3       	in	r18, 0x1b	; 27
 73a:	81 e0       	ldi	r24, 0x01	; 1
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	02 c0       	rjmp	.+4      	; 0x744 <DIO_setPinValue+0x4a>
 740:	88 0f       	add	r24, r24
 742:	99 1f       	adc	r25, r25
 744:	6a 95       	dec	r22
 746:	e2 f7       	brpl	.-8      	; 0x740 <DIO_setPinValue+0x46>
 748:	80 95       	com	r24
 74a:	82 23       	and	r24, r18
 74c:	8b bb       	out	0x1b, r24	; 27
 74e:	08 95       	ret
 750:	41 30       	cpi	r20, 0x01	; 1
 752:	59 f4       	brne	.+22     	; 0x76a <DIO_setPinValue+0x70>
 754:	28 b3       	in	r18, 0x18	; 24
 756:	81 e0       	ldi	r24, 0x01	; 1
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	02 c0       	rjmp	.+4      	; 0x760 <DIO_setPinValue+0x66>
 75c:	88 0f       	add	r24, r24
 75e:	99 1f       	adc	r25, r25
 760:	6a 95       	dec	r22
 762:	e2 f7       	brpl	.-8      	; 0x75c <DIO_setPinValue+0x62>
 764:	82 2b       	or	r24, r18
 766:	88 bb       	out	0x18, r24	; 24
 768:	08 95       	ret
 76a:	28 b3       	in	r18, 0x18	; 24
 76c:	81 e0       	ldi	r24, 0x01	; 1
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	02 c0       	rjmp	.+4      	; 0x776 <DIO_setPinValue+0x7c>
 772:	88 0f       	add	r24, r24
 774:	99 1f       	adc	r25, r25
 776:	6a 95       	dec	r22
 778:	e2 f7       	brpl	.-8      	; 0x772 <DIO_setPinValue+0x78>
 77a:	80 95       	com	r24
 77c:	82 23       	and	r24, r18
 77e:	88 bb       	out	0x18, r24	; 24
 780:	08 95       	ret
 782:	41 30       	cpi	r20, 0x01	; 1
 784:	59 f4       	brne	.+22     	; 0x79c <DIO_setPinValue+0xa2>
 786:	25 b3       	in	r18, 0x15	; 21
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	02 c0       	rjmp	.+4      	; 0x792 <DIO_setPinValue+0x98>
 78e:	88 0f       	add	r24, r24
 790:	99 1f       	adc	r25, r25
 792:	6a 95       	dec	r22
 794:	e2 f7       	brpl	.-8      	; 0x78e <DIO_setPinValue+0x94>
 796:	82 2b       	or	r24, r18
 798:	85 bb       	out	0x15, r24	; 21
 79a:	08 95       	ret
 79c:	25 b3       	in	r18, 0x15	; 21
 79e:	81 e0       	ldi	r24, 0x01	; 1
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <DIO_setPinValue+0xae>
 7a4:	88 0f       	add	r24, r24
 7a6:	99 1f       	adc	r25, r25
 7a8:	6a 95       	dec	r22
 7aa:	e2 f7       	brpl	.-8      	; 0x7a4 <DIO_setPinValue+0xaa>
 7ac:	80 95       	com	r24
 7ae:	82 23       	and	r24, r18
 7b0:	85 bb       	out	0x15, r24	; 21
 7b2:	08 95       	ret
 7b4:	41 30       	cpi	r20, 0x01	; 1
 7b6:	59 f4       	brne	.+22     	; 0x7ce <DIO_setPinValue+0xd4>
 7b8:	22 b3       	in	r18, 0x12	; 18
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <DIO_setPinValue+0xca>
 7c0:	88 0f       	add	r24, r24
 7c2:	99 1f       	adc	r25, r25
 7c4:	6a 95       	dec	r22
 7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <DIO_setPinValue+0xc6>
 7c8:	82 2b       	or	r24, r18
 7ca:	82 bb       	out	0x12, r24	; 18
 7cc:	08 95       	ret
 7ce:	22 b3       	in	r18, 0x12	; 18
 7d0:	81 e0       	ldi	r24, 0x01	; 1
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <DIO_setPinValue+0xe0>
 7d6:	88 0f       	add	r24, r24
 7d8:	99 1f       	adc	r25, r25
 7da:	6a 95       	dec	r22
 7dc:	e2 f7       	brpl	.-8      	; 0x7d6 <DIO_setPinValue+0xdc>
 7de:	80 95       	com	r24
 7e0:	82 23       	and	r24, r18
 7e2:	82 bb       	out	0x12, r24	; 18
 7e4:	08 95       	ret

000007e6 <GIE_Enable>:
 7e6:	8f b7       	in	r24, 0x3f	; 63
 7e8:	80 68       	ori	r24, 0x80	; 128
 7ea:	8f bf       	out	0x3f, r24	; 63
 7ec:	08 95       	ret

000007ee <PWM_init>:
 7ee:	41 e0       	ldi	r20, 0x01	; 1
 7f0:	64 e0       	ldi	r22, 0x04	; 4
 7f2:	83 e0       	ldi	r24, 0x03	; 3
 7f4:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 7f8:	41 e0       	ldi	r20, 0x01	; 1
 7fa:	65 e0       	ldi	r22, 0x05	; 5
 7fc:	83 e0       	ldi	r24, 0x03	; 3
 7fe:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_setPinDirection>
 802:	8f b5       	in	r24, 0x2f	; 47
 804:	8e 7f       	andi	r24, 0xFE	; 254
 806:	8f bd       	out	0x2f, r24	; 47
 808:	8f b5       	in	r24, 0x2f	; 47
 80a:	82 60       	ori	r24, 0x02	; 2
 80c:	8f bd       	out	0x2f, r24	; 47
 80e:	8e b5       	in	r24, 0x2e	; 46
 810:	88 60       	ori	r24, 0x08	; 8
 812:	8e bd       	out	0x2e, r24	; 46
 814:	8e b5       	in	r24, 0x2e	; 46
 816:	80 61       	ori	r24, 0x10	; 16
 818:	8e bd       	out	0x2e, r24	; 46
 81a:	8f b5       	in	r24, 0x2f	; 47
 81c:	8f 7b       	andi	r24, 0xBF	; 191
 81e:	8f bd       	out	0x2f, r24	; 47
 820:	8f b5       	in	r24, 0x2f	; 47
 822:	80 68       	ori	r24, 0x80	; 128
 824:	8f bd       	out	0x2f, r24	; 47
 826:	8f b5       	in	r24, 0x2f	; 47
 828:	8f 7e       	andi	r24, 0xEF	; 239
 82a:	8f bd       	out	0x2f, r24	; 47
 82c:	8f b5       	in	r24, 0x2f	; 47
 82e:	80 62       	ori	r24, 0x20	; 32
 830:	8f bd       	out	0x2f, r24	; 47
 832:	8e b5       	in	r24, 0x2e	; 46
 834:	81 60       	ori	r24, 0x01	; 1
 836:	8e bd       	out	0x2e, r24	; 46
 838:	8e b5       	in	r24, 0x2e	; 46
 83a:	8d 7f       	andi	r24, 0xFD	; 253
 83c:	8e bd       	out	0x2e, r24	; 46
 83e:	8e b5       	in	r24, 0x2e	; 46
 840:	8b 7f       	andi	r24, 0xFB	; 251
 842:	8e bd       	out	0x2e, r24	; 46
 844:	8f ef       	ldi	r24, 0xFF	; 255
 846:	9f ef       	ldi	r25, 0xFF	; 255
 848:	97 bd       	out	0x27, r25	; 39
 84a:	86 bd       	out	0x26, r24	; 38
 84c:	1b bc       	out	0x2b, r1	; 43
 84e:	1a bc       	out	0x2a, r1	; 42
 850:	19 bc       	out	0x29, r1	; 41
 852:	18 bc       	out	0x28, r1	; 40
 854:	08 95       	ret

00000856 <PWM_car_speed_Range>:
 856:	85 36       	cpi	r24, 0x65	; 101
 858:	a0 f4       	brcc	.+40     	; 0x882 <__stack+0x23>
 85a:	2f ef       	ldi	r18, 0xFF	; 255
 85c:	3f ef       	ldi	r19, 0xFF	; 255
 85e:	37 bd       	out	0x27, r19	; 39
 860:	26 bd       	out	0x26, r18	; 38
 862:	28 2f       	mov	r18, r24
 864:	30 e0       	ldi	r19, 0x00	; 0
 866:	af ef       	ldi	r26, 0xFF	; 255
 868:	bf ef       	ldi	r27, 0xFF	; 255
 86a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__umulhisi3>
 86e:	24 e6       	ldi	r18, 0x64	; 100
 870:	30 e0       	ldi	r19, 0x00	; 0
 872:	40 e0       	ldi	r20, 0x00	; 0
 874:	50 e0       	ldi	r21, 0x00	; 0
 876:	0e 94 cd 04 	call	0x99a	; 0x99a <__divmodsi4>
 87a:	3b bd       	out	0x2b, r19	; 43
 87c:	2a bd       	out	0x2a, r18	; 42
 87e:	39 bd       	out	0x29, r19	; 41
 880:	28 bd       	out	0x28, r18	; 40
 882:	08 95       	ret

00000884 <UART_init>:
}

/* Function to disable ISR */
void UART_RXC_DisableInt(void)
{
	CLR_BIT(UCSRB,RXCIE);
 884:	8a b1       	in	r24, 0x0a	; 10
 886:	8f 77       	andi	r24, 0x7F	; 127
 888:	8a b9       	out	0x0a, r24	; 10
 88a:	8a b1       	in	r24, 0x0a	; 10
 88c:	8f 7b       	andi	r24, 0xBF	; 191
 88e:	8a b9       	out	0x0a, r24	; 10
 890:	8a b1       	in	r24, 0x0a	; 10
 892:	8f 7d       	andi	r24, 0xDF	; 223
 894:	8a b9       	out	0x0a, r24	; 10
 896:	8a b1       	in	r24, 0x0a	; 10
 898:	88 60       	ori	r24, 0x08	; 8
 89a:	8a b9       	out	0x0a, r24	; 10
 89c:	8a b1       	in	r24, 0x0a	; 10
 89e:	80 61       	ori	r24, 0x10	; 16
 8a0:	8a b9       	out	0x0a, r24	; 10
 8a2:	8a b1       	in	r24, 0x0a	; 10
 8a4:	8b 7f       	andi	r24, 0xFB	; 251
 8a6:	8a b9       	out	0x0a, r24	; 10
 8a8:	80 b5       	in	r24, 0x20	; 32
 8aa:	80 68       	ori	r24, 0x80	; 128
 8ac:	80 bd       	out	0x20, r24	; 32
 8ae:	80 b5       	in	r24, 0x20	; 32
 8b0:	8f 7b       	andi	r24, 0xBF	; 191
 8b2:	80 bd       	out	0x20, r24	; 32
 8b4:	80 b5       	in	r24, 0x20	; 32
 8b6:	8f 7e       	andi	r24, 0xEF	; 239
 8b8:	80 bd       	out	0x20, r24	; 32
 8ba:	80 b5       	in	r24, 0x20	; 32
 8bc:	8f 7d       	andi	r24, 0xDF	; 223
 8be:	80 bd       	out	0x20, r24	; 32
 8c0:	80 b5       	in	r24, 0x20	; 32
 8c2:	87 7f       	andi	r24, 0xF7	; 247
 8c4:	80 bd       	out	0x20, r24	; 32
 8c6:	80 b5       	in	r24, 0x20	; 32
 8c8:	82 60       	ori	r24, 0x02	; 2
 8ca:	80 bd       	out	0x20, r24	; 32
 8cc:	80 b5       	in	r24, 0x20	; 32
 8ce:	84 60       	ori	r24, 0x04	; 4
 8d0:	80 bd       	out	0x20, r24	; 32
 8d2:	80 b5       	in	r24, 0x20	; 32
 8d4:	8e 7f       	andi	r24, 0xFE	; 254
 8d6:	80 bd       	out	0x20, r24	; 32
 8d8:	8b b1       	in	r24, 0x0b	; 11
 8da:	8d 7f       	andi	r24, 0xFD	; 253
 8dc:	8b b9       	out	0x0b, r24	; 11
 8de:	87 e6       	ldi	r24, 0x67	; 103
 8e0:	89 b9       	out	0x09, r24	; 9
 8e2:	10 bc       	out	0x20, r1	; 32
 8e4:	08 95       	ret

000008e6 <UART_RxChar>:
 8e6:	5f 9b       	sbis	0x0b, 7	; 11
 8e8:	fe cf       	rjmp	.-4      	; 0x8e6 <UART_RxChar>
 8ea:	2c b1       	in	r18, 0x0c	; 12
 8ec:	fc 01       	movw	r30, r24
 8ee:	20 83       	st	Z, r18
 8f0:	08 95       	ret

000008f2 <UART_RXC_EnableInt>:
 8f2:	8a b1       	in	r24, 0x0a	; 10
 8f4:	80 68       	ori	r24, 0x80	; 128
 8f6:	8a b9       	out	0x0a, r24	; 10
 8f8:	08 95       	ret

000008fa <UART_RXC_SetCallback>:
}

/* Call Back Function  */
void UART_RXC_SetCallback( void (*CopyFuncPtr) (void))
{
	UART_RXC_CallBack = CopyFuncPtr ;
 8fa:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <UART_RXC_CallBack+0x1>
 8fe:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <UART_RXC_CallBack>
 902:	08 95       	ret

00000904 <__vector_13>:
}

void __vector_13(void)  __attribute__((signal , used));
void __vector_13(void)
{
 904:	1f 92       	push	r1
 906:	0f 92       	push	r0
 908:	0f b6       	in	r0, 0x3f	; 63
 90a:	0f 92       	push	r0
 90c:	11 24       	eor	r1, r1
 90e:	2f 93       	push	r18
 910:	3f 93       	push	r19
 912:	4f 93       	push	r20
 914:	5f 93       	push	r21
 916:	6f 93       	push	r22
 918:	7f 93       	push	r23
 91a:	8f 93       	push	r24
 91c:	9f 93       	push	r25
 91e:	af 93       	push	r26
 920:	bf 93       	push	r27
 922:	ef 93       	push	r30
 924:	ff 93       	push	r31
	if(UART_RXC_CallBack != NULL)
 926:	e0 91 e7 00 	lds	r30, 0x00E7	; 0x8000e7 <UART_RXC_CallBack>
 92a:	f0 91 e8 00 	lds	r31, 0x00E8	; 0x8000e8 <UART_RXC_CallBack+0x1>
 92e:	30 97       	sbiw	r30, 0x00	; 0
 930:	09 f0       	breq	.+2      	; 0x934 <__vector_13+0x30>
	{
		UART_RXC_CallBack();
 932:	09 95       	icall
	}
}
 934:	ff 91       	pop	r31
 936:	ef 91       	pop	r30
 938:	bf 91       	pop	r27
 93a:	af 91       	pop	r26
 93c:	9f 91       	pop	r25
 93e:	8f 91       	pop	r24
 940:	7f 91       	pop	r23
 942:	6f 91       	pop	r22
 944:	5f 91       	pop	r21
 946:	4f 91       	pop	r20
 948:	3f 91       	pop	r19
 94a:	2f 91       	pop	r18
 94c:	0f 90       	pop	r0
 94e:	0f be       	out	0x3f, r0	; 63
 950:	0f 90       	pop	r0
 952:	1f 90       	pop	r1
 954:	18 95       	reti

00000956 <__udivmodsi4>:
 956:	a1 e2       	ldi	r26, 0x21	; 33
 958:	1a 2e       	mov	r1, r26
 95a:	aa 1b       	sub	r26, r26
 95c:	bb 1b       	sub	r27, r27
 95e:	fd 01       	movw	r30, r26
 960:	0d c0       	rjmp	.+26     	; 0x97c <__udivmodsi4_ep>

00000962 <__udivmodsi4_loop>:
 962:	aa 1f       	adc	r26, r26
 964:	bb 1f       	adc	r27, r27
 966:	ee 1f       	adc	r30, r30
 968:	ff 1f       	adc	r31, r31
 96a:	a2 17       	cp	r26, r18
 96c:	b3 07       	cpc	r27, r19
 96e:	e4 07       	cpc	r30, r20
 970:	f5 07       	cpc	r31, r21
 972:	20 f0       	brcs	.+8      	; 0x97c <__udivmodsi4_ep>
 974:	a2 1b       	sub	r26, r18
 976:	b3 0b       	sbc	r27, r19
 978:	e4 0b       	sbc	r30, r20
 97a:	f5 0b       	sbc	r31, r21

0000097c <__udivmodsi4_ep>:
 97c:	66 1f       	adc	r22, r22
 97e:	77 1f       	adc	r23, r23
 980:	88 1f       	adc	r24, r24
 982:	99 1f       	adc	r25, r25
 984:	1a 94       	dec	r1
 986:	69 f7       	brne	.-38     	; 0x962 <__udivmodsi4_loop>
 988:	60 95       	com	r22
 98a:	70 95       	com	r23
 98c:	80 95       	com	r24
 98e:	90 95       	com	r25
 990:	9b 01       	movw	r18, r22
 992:	ac 01       	movw	r20, r24
 994:	bd 01       	movw	r22, r26
 996:	cf 01       	movw	r24, r30
 998:	08 95       	ret

0000099a <__divmodsi4>:
 99a:	05 2e       	mov	r0, r21
 99c:	97 fb       	bst	r25, 7
 99e:	1e f4       	brtc	.+6      	; 0x9a6 <__divmodsi4+0xc>
 9a0:	00 94       	com	r0
 9a2:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__negsi2>
 9a6:	57 fd       	sbrc	r21, 7
 9a8:	07 d0       	rcall	.+14     	; 0x9b8 <__divmodsi4_neg2>
 9aa:	0e 94 ab 04 	call	0x956	; 0x956 <__udivmodsi4>
 9ae:	07 fc       	sbrc	r0, 7
 9b0:	03 d0       	rcall	.+6      	; 0x9b8 <__divmodsi4_neg2>
 9b2:	4e f4       	brtc	.+18     	; 0x9c6 <__divmodsi4_exit>
 9b4:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__negsi2>

000009b8 <__divmodsi4_neg2>:
 9b8:	50 95       	com	r21
 9ba:	40 95       	com	r20
 9bc:	30 95       	com	r19
 9be:	21 95       	neg	r18
 9c0:	3f 4f       	sbci	r19, 0xFF	; 255
 9c2:	4f 4f       	sbci	r20, 0xFF	; 255
 9c4:	5f 4f       	sbci	r21, 0xFF	; 255

000009c6 <__divmodsi4_exit>:
 9c6:	08 95       	ret

000009c8 <__negsi2>:
 9c8:	90 95       	com	r25
 9ca:	80 95       	com	r24
 9cc:	70 95       	com	r23
 9ce:	61 95       	neg	r22
 9d0:	7f 4f       	sbci	r23, 0xFF	; 255
 9d2:	8f 4f       	sbci	r24, 0xFF	; 255
 9d4:	9f 4f       	sbci	r25, 0xFF	; 255
 9d6:	08 95       	ret

000009d8 <__umulhisi3>:
 9d8:	a2 9f       	mul	r26, r18
 9da:	b0 01       	movw	r22, r0
 9dc:	b3 9f       	mul	r27, r19
 9de:	c0 01       	movw	r24, r0
 9e0:	a3 9f       	mul	r26, r19
 9e2:	70 0d       	add	r23, r0
 9e4:	81 1d       	adc	r24, r1
 9e6:	11 24       	eor	r1, r1
 9e8:	91 1d       	adc	r25, r1
 9ea:	b2 9f       	mul	r27, r18
 9ec:	70 0d       	add	r23, r0
 9ee:	81 1d       	adc	r24, r1
 9f0:	11 24       	eor	r1, r1
 9f2:	91 1d       	adc	r25, r1
 9f4:	08 95       	ret

000009f6 <_exit>:
 9f6:	f8 94       	cli

000009f8 <__stop_program>:
 9f8:	ff cf       	rjmp	.-2      	; 0x9f8 <__stop_program>
